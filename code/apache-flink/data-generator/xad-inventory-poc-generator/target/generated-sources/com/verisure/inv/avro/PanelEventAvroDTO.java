/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.verisure.inv.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class PanelEventAvroDTO extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5748760594834302996L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PanelEventAvroDTO\",\"namespace\":\"com.verisure.inv.avro\",\"fields\":[{\"name\":\"panelEvent\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PanelEvent\",\"fields\":[{\"name\":\"armedType\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"channelComm\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"devManufacturer\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"devType\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"deviceId\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"dhpEnable\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"evNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"evSource\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"evTTCU\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"eventCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"inOrOut\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"protocolType\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"sdKey\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"SdKey\",\"fields\":[{\"name\":\"idCountry\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"idInstallation\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"timestampEvent\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"timestampEventDevice\",\"type\":[\"null\",\"long\"],\"default\":null}]}],\"default\":null},{\"name\":\"sei\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"serviceType\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"sidPhoto\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"signal\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"simCarrier\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"simNumber\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"sintetic\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"sourceType\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"targetType\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"timestampPhoto\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"totalPhotos\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"transmissionType\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"utcTime\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"zone\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PanelEventAvroDTO> ENCODER =
      new BinaryMessageEncoder<PanelEventAvroDTO>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PanelEventAvroDTO> DECODER =
      new BinaryMessageDecoder<PanelEventAvroDTO>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<PanelEventAvroDTO> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<PanelEventAvroDTO> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<PanelEventAvroDTO> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PanelEventAvroDTO>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this PanelEventAvroDTO to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a PanelEventAvroDTO from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a PanelEventAvroDTO instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static PanelEventAvroDTO fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private com.verisure.inv.avro.PanelEvent panelEvent;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PanelEventAvroDTO() {}

  /**
   * All-args constructor.
   * @param panelEvent The new value for panelEvent
   */
  public PanelEventAvroDTO(com.verisure.inv.avro.PanelEvent panelEvent) {
    this.panelEvent = panelEvent;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return panelEvent;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: panelEvent = (com.verisure.inv.avro.PanelEvent)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'panelEvent' field.
   * @return The value of the 'panelEvent' field.
   */
  public com.verisure.inv.avro.PanelEvent getPanelEvent() {
    return panelEvent;
  }


  /**
   * Sets the value of the 'panelEvent' field.
   * @param value the value to set.
   */
  public void setPanelEvent(com.verisure.inv.avro.PanelEvent value) {
    this.panelEvent = value;
  }

  /**
   * Creates a new PanelEventAvroDTO RecordBuilder.
   * @return A new PanelEventAvroDTO RecordBuilder
   */
  public static com.verisure.inv.avro.PanelEventAvroDTO.Builder newBuilder() {
    return new com.verisure.inv.avro.PanelEventAvroDTO.Builder();
  }

  /**
   * Creates a new PanelEventAvroDTO RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PanelEventAvroDTO RecordBuilder
   */
  public static com.verisure.inv.avro.PanelEventAvroDTO.Builder newBuilder(com.verisure.inv.avro.PanelEventAvroDTO.Builder other) {
    if (other == null) {
      return new com.verisure.inv.avro.PanelEventAvroDTO.Builder();
    } else {
      return new com.verisure.inv.avro.PanelEventAvroDTO.Builder(other);
    }
  }

  /**
   * Creates a new PanelEventAvroDTO RecordBuilder by copying an existing PanelEventAvroDTO instance.
   * @param other The existing instance to copy.
   * @return A new PanelEventAvroDTO RecordBuilder
   */
  public static com.verisure.inv.avro.PanelEventAvroDTO.Builder newBuilder(com.verisure.inv.avro.PanelEventAvroDTO other) {
    if (other == null) {
      return new com.verisure.inv.avro.PanelEventAvroDTO.Builder();
    } else {
      return new com.verisure.inv.avro.PanelEventAvroDTO.Builder(other);
    }
  }

  /**
   * RecordBuilder for PanelEventAvroDTO instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PanelEventAvroDTO>
    implements org.apache.avro.data.RecordBuilder<PanelEventAvroDTO> {

    private com.verisure.inv.avro.PanelEvent panelEvent;
    private com.verisure.inv.avro.PanelEvent.Builder panelEventBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.verisure.inv.avro.PanelEventAvroDTO.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.panelEvent)) {
        this.panelEvent = data().deepCopy(fields()[0].schema(), other.panelEvent);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasPanelEventBuilder()) {
        this.panelEventBuilder = com.verisure.inv.avro.PanelEvent.newBuilder(other.getPanelEventBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing PanelEventAvroDTO instance
     * @param other The existing instance to copy.
     */
    private Builder(com.verisure.inv.avro.PanelEventAvroDTO other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.panelEvent)) {
        this.panelEvent = data().deepCopy(fields()[0].schema(), other.panelEvent);
        fieldSetFlags()[0] = true;
      }
      this.panelEventBuilder = null;
    }

    /**
      * Gets the value of the 'panelEvent' field.
      * @return The value.
      */
    public com.verisure.inv.avro.PanelEvent getPanelEvent() {
      return panelEvent;
    }


    /**
      * Sets the value of the 'panelEvent' field.
      * @param value The value of 'panelEvent'.
      * @return This builder.
      */
    public com.verisure.inv.avro.PanelEventAvroDTO.Builder setPanelEvent(com.verisure.inv.avro.PanelEvent value) {
      validate(fields()[0], value);
      this.panelEventBuilder = null;
      this.panelEvent = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'panelEvent' field has been set.
      * @return True if the 'panelEvent' field has been set, false otherwise.
      */
    public boolean hasPanelEvent() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'panelEvent' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.verisure.inv.avro.PanelEvent.Builder getPanelEventBuilder() {
      if (panelEventBuilder == null) {
        if (hasPanelEvent()) {
          setPanelEventBuilder(com.verisure.inv.avro.PanelEvent.newBuilder(panelEvent));
        } else {
          setPanelEventBuilder(com.verisure.inv.avro.PanelEvent.newBuilder());
        }
      }
      return panelEventBuilder;
    }

    /**
     * Sets the Builder instance for the 'panelEvent' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.verisure.inv.avro.PanelEventAvroDTO.Builder setPanelEventBuilder(com.verisure.inv.avro.PanelEvent.Builder value) {
      clearPanelEvent();
      panelEventBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'panelEvent' field has an active Builder instance
     * @return True if the 'panelEvent' field has an active Builder instance
     */
    public boolean hasPanelEventBuilder() {
      return panelEventBuilder != null;
    }

    /**
      * Clears the value of the 'panelEvent' field.
      * @return This builder.
      */
    public com.verisure.inv.avro.PanelEventAvroDTO.Builder clearPanelEvent() {
      panelEvent = null;
      panelEventBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PanelEventAvroDTO build() {
      try {
        PanelEventAvroDTO record = new PanelEventAvroDTO();
        if (panelEventBuilder != null) {
          try {
            record.panelEvent = this.panelEventBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("panelEvent"));
            throw e;
          }
        } else {
          record.panelEvent = fieldSetFlags()[0] ? this.panelEvent : (com.verisure.inv.avro.PanelEvent) defaultValue(fields()[0]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PanelEventAvroDTO>
    WRITER$ = (org.apache.avro.io.DatumWriter<PanelEventAvroDTO>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PanelEventAvroDTO>
    READER$ = (org.apache.avro.io.DatumReader<PanelEventAvroDTO>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.panelEvent == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.panelEvent.customEncode(out);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.panelEvent = null;
      } else {
        if (this.panelEvent == null) {
          this.panelEvent = new com.verisure.inv.avro.PanelEvent();
        }
        this.panelEvent.customDecode(in);
      }

    } else {
      for (int i = 0; i < 1; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.panelEvent = null;
          } else {
            if (this.panelEvent == null) {
              this.panelEvent = new com.verisure.inv.avro.PanelEvent();
            }
            this.panelEvent.customDecode(in);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










